'use strict';

var _stringify = require('babel-runtime/core-js/json/stringify');

var _stringify2 = _interopRequireDefault(_stringify);

var _typeof2 = require('babel-runtime/helpers/typeof');

var _typeof3 = _interopRequireDefault(_typeof2);

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.json = exports.run = undefined;
exports.default = serve;
exports.send = send;
exports.sendError = sendError;

var _http = require('http');

var _rawBody = require('raw-body');

var _rawBody2 = _interopRequireDefault(_rawBody);

var _mediaTyper = require('media-typer');

var _mediaTyper2 = _interopRequireDefault(_mediaTyper);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var DEV = 'development' === process.env.NODE_ENV;

function serve(fn) {
  var _ref = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

  var _ref$onError = _ref.onError;
  var onError = _ref$onError === undefined ? null : _ref$onError;

  return (0, _http.Server)(function (req, res) {
    run(req, res, fn, onError || sendError);
  });
}

var run = exports.run = function () {
  var ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee(req, res, fn, onError) {
    return _regenerator2.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.prev = 0;
            _context.next = 3;
            return fn(req, res);

          case 3:
            _context.next = 9;
            break;

          case 5:
            _context.prev = 5;
            _context.t0 = _context['catch'](0);
            _context.next = 9;
            return onError(req, res, _context.t0);

          case 9:
          case 'end':
            return _context.stop();
        }
      }
    }, _callee, this, [[0, 5]]);
  }));
  return function run(_x2, _x3, _x4, _x5) {
    return ref.apply(this, arguments);
  };
}();

var json = exports.json = function () {
  var ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee2(req) {
    var _ref2 = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

    var _ref2$limit = _ref2.limit;
    var limit = _ref2$limit === undefined ? '1mb' : _ref2$limit;
    var type, length, encoding, str;
    return _regenerator2.default.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            _context2.prev = 0;
            type = req.headers['content-type'];
            length = req.headers['content-length'];
            encoding = _mediaTyper2.default.parse(type).parameters.charset;
            _context2.next = 6;
            return (0, _rawBody2.default)(req, { limit: limit, length: length, encoding: encoding });

          case 6:
            str = _context2.sent;
            _context2.prev = 7;
            return _context2.abrupt('return', JSON.parse(str));

          case 11:
            _context2.prev = 11;
            _context2.t0 = _context2['catch'](7);
            throw createError(400, 'Invalid JSON', _context2.t0);

          case 14:
            _context2.next = 23;
            break;

          case 16:
            _context2.prev = 16;
            _context2.t1 = _context2['catch'](0);

            if (!('entity.too.large' === _context2.t1.type)) {
              _context2.next = 22;
              break;
            }

            throw createError(413, 'Body exceeded ' + limit + ' limit', _context2.t1);

          case 22:
            throw createError(400, 'Invalid body', _context2.t1);

          case 23:
          case 'end':
            return _context2.stop();
        }
      }
    }, _callee2, this, [[0, 16], [7, 11]]);
  }));
  return function json(_x6, _x7) {
    return ref.apply(this, arguments);
  };
}();

function send(res, code) {
  var obj = arguments.length <= 2 || arguments[2] === undefined ? null : arguments[2];

  res.statusCode = code;

  if (null != obj) {
    var _str = undefined;

    if ('object' === (typeof obj === 'undefined' ? 'undefined' : (0, _typeof3.default)(obj))) {
      // we stringify before setting the header
      // in case `JSON.stringify` throws and a
      // 500 has to be sent instead
      _str = (0, _stringify2.default)(obj, null, DEV ? 2 : 0);
      res.setHeader('Content-Type', 'application/json');
    } else {
      _str = obj;
    }

    res.setHeader('Content-Length', Buffer.byteLength(_str));
    res.end(_str);
  } else {
    res.end();
  }
}

function sendError(req, res, _ref3) {
  var statusCode = _ref3.statusCode;
  var message = _ref3.message;
  var stack = _ref3.stack;

  if (statusCode) {
    send(res, statusCode, DEV ? stack : message);
  } else {
    send(res, 500, DEV ? stack : 'Internal Server Error');
  }
  if (DEV) console.error(stack);
}

function createError(code, msg, orig) {
  var err = new Error(msg);
  err.statusCode = code;
  err.originalError = orig;
  return err;
}